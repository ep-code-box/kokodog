<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SqlMapper">
  <insert id="insertTestData">
    INSERT INTO cmn_test
    SELECT IFNULL(MAX(ct.test_num) + 1, 1) AS test_num
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , 'Test1' AS test_txt
    FROM   cmn_test ct
  </insert>
  <select id="getDevDbdDBIOListBySearchTxt" parameterType="HashMap" resultType="HashMap">
    SELECT ddq.query_num AS query_num
         , ddq.query_name AS query_name
    FROM   dev_dbd_query ddq
    WHERE  ddq.query_name LIKE CONCAT('%', CONCAT(#{search_txt},'%'))
    AND    ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                          FROM   dev_dbd_query ddq2
                          WHERE  ddq.query_num = ddq2.query_num
                         )
    ORDER BY ddq.query_name
    LIMIT #{from}, #{row_num}
  </select>
  <select id="getDevDbdQuery" parameterType="HashMap" resultType="HashMap">
    SELECT ddq.query AS query
         , ddq.rep_ver AS rep_ver
         , (SELECT MAX(ddq3.rep_ver)
            FROM   dev_dbd_query ddq3
            WHERE  ddq3.query_num = ddq.query_num
           ) AS max_rep_ver
         , CASE WHEN EXISTS (SELECT *
                             FROM   dev_dbd_query ddq4
                             WHERE  ddq4.query_num = ddq.query_num
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.dist_typ = 1
                                                AND    dcdh.source_num = ddq4.query_num
                                                AND    dcdh.rep_ver = ddq4.rep_ver
                                               )
                            )
                     AND ddq.owner_id &lt;&gt; #{user_num}
                THEN 'N'
                ELSE 'Y'
           END is_auth
         , CASE WHEN EXISTS (SELECT *
                             FROM   dev_dbd_query ddq4
                             WHERE  ddq4.query_num = ddq.query_num
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.dist_typ = 1
                                                AND    dcdh.source_num = ddq4.query_num
                                                AND    dcdh.rep_ver = ddq4.rep_ver
                                               )
                            )
                THEN 'Y'
                ELSE 'N'
           END is_exist_no_dist
    FROM   dev_dbd_query ddq
    WHERE  ddq.query_num = #{query_num}
    AND    (((#{rep_ver} IS NULL OR #{rep_ver} = 0)
             AND ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                                FROM   dev_dbd_query ddq2
                                WHERE  ddq2.query_num = ddq.query_num
                               )
            )
            OR ddq.rep_ver = #{rep_ver}
           )
  </select>
  <select id="getDevDbdQueryRepInfo" parameterType="HashMap" resultType="HashMap">
    SELECT ddq.rep_ver
         , dcdh.dist_instance
         , (SELECT ccd.cd_seq_name
            FROM   cmn_cd_dtl ccd
            WHERE  ccd.cd_num = 15
            AND    ccd.cd_seq = dcdh.dist_instance
            AND    NOW() BETWEEN ccd.eff_sta_dtm AND ccd.eff_end_dtm
           ) AS dist_instance_nm
    FROM   dev_dbd_query ddq
         , dev_cmn_dist_hist dcdh
    WHERE  ddq.query_num = #{query_num}
    AND    ddq.query_num = dcdh.source_num
    AND    dcdh.rep_ver = ddq.rep_ver
    AND    dcdh.dist_typ = 1
    AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                            FROM   dev_cmn_dist_hist dcdh2
                            WHERE  dcdh2.source_num = dcdh.source_num
                            AND    dcdh2.dist_instance = dcdh.dist_instance
                            AND    dcdh2.dist_typ = dcdh.dist_typ
                           )
  </select>
  <select id="getDevDbdInsertQueryAuth" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   dev_dbd_query ddq
                             WHERE  ddq.query_num = #{query_num}
                             AND    ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                                                   FROM   dev_dbd_query ddq2
                                                   WHERE  ddq2.query_num = ddq.query_num
                                                  )
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.source_num = ddq.query_num
                                                AND    dcdh.dist_typ = 1
                                              )
                             AND    ddq.owner_id &lt;&gt; #{user_num}
                            )
                THEN 'N'
                ELSE 'Y'
           END AS is_auth
  </select>
  <select id="getDevDbdIsUpdateQuery" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   dev_dbd_query ddq
                             WHERE  ddq.query_num = #{query_num}
                             AND    ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                                                   FROM   dev_dbd_query ddq2
                                                   WHERE  ddq2.query_num = ddq.query_num
                                                  )
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.source_num = ddq.query_num
                                                AND    dcdh.rep_ver = ddq.rep_ver
                                                AND    dcdh.dist_typ = 1
                                              )
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_update
  </select>
  <select id="getDevDbdMaxRepVerQueryByQueryNum" parameterType="HashMap" resultType="HashMap">
    SELECT MAX(ddq.rep_ver) AS rep_ver
    FROM   dev_dbd_query ddq
    WHERE  ddq.query_num = #{query_num}
  </select>
  <update id="updateDevDbdQuery" parameterType="HashMap">
    UPDATE dev_dbd_query ddq
    SET    ddq.query_name = CASE WHEN #{query_name} IS NULL THEN ddq.query_name
                                 ELSE #{query_name}
                            END
         , ddq.query = #{query}
         , ddq.audit_id = #{user_num}
         , ddq.audit_dtm = NOW()
    WHERE  ddq.query_num = #{query_num}
    AND    ddq.rep_ver = #{rep_ver}
  </update>
  <insert id="insertDevDbdQuery" parameterType="HashMap">
    INSERT INTO dev_dbd_query
    (query_num,
     rep_ver,
     audit_id,
     audit_dtm,
     query_name,
     query,
     rep_dtm,
     owner_id
    )
    SELECT CASE WHEN #{query_num} IS NULL
                THEN IFNULL(MAX(ddq.query_num) + 1, 1)
                ELSE #{query_num}
           END AS query_num
         , CASE WHEN #{query_num} IS NULL
                THEN 1
                ELSE MAX(ddq.rep_ver) + 1
           END AS rep_ver
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , CASE WHEN #{query_name} IS NULL
                THEN (SELECT ddq2.query_name
                      FROM   dev_dbd_query ddq2
                      WHERE  ddq2.query_num = ddq.query_num
                      AND    ddq2.rep_ver = (SELECT MAX(ddq3.rep_ver)
                                             FROM   dev_dbd_query ddq3
                                             WHERE  ddq3.query_num = ddq2.query_num
                                            )
                     )
                ELSE #{query_name}
           END AS query_name
         , #{query} AS query
         , NULL AS rep_dtm
         , #{user_num} AS ownser_id
    FROM   dev_dbd_query ddq
    WHERE  #{query_num} IS NULL
    OR     ddq.query_num = #{query_num}
  </insert>
  <select id="getDevDbdMaxQueryNum" parameterType="HashMap" resultType="HashMap">
    SELECT MAX(ddq.query_num) AS query_num
    FROM   dev_dbd_query ddq
  </select>
  <select id="getDevDbdCheckQueryNameExist" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS(SELECT *
                            FROM   dev_dbd_query ddq
                            WHERE  ddq.query_name = #{query_name}
                            AND    (ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                                                   FROM   dev_dbd_query ddq2
                                                   WHERE  ddq2.query_num = ddq.query_num
                                                   AND    NOT EXISTS (SELECT *
                                                                      FROM   dev_cmn_dist_hist dcdh3
                                                                      WHERE  dcdh3.dist_typ = 1
                                                                      AND    dcdh3.source_num = ddq2.query_num
                                                                      AND    dcdh3.rep_ver = ddq2.rep_ver
                                                                     )
                                                  )
                                    OR ddq.rep_ver IN (SELECT ddq3.rep_ver
                                                       FROM   dev_dbd_query ddq3
                                                            , dev_cmn_dist_hist dcdh
                                                       WHERE  ddq3.query_num = ddq.query_num
                                                       AND    ddq3.query_num = dcdh.source_num
                                                       AND    dcdh.dist_typ = 1
                                                       AND    dcdh.rep_ver = ddq3.rep_ver
                                                       AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                                                                               FROM   dev_cmn_dist_hist dcdh2
                                                                               WHERE  dcdh2.dist_typ = dcdh.dist_typ
                                                                               AND    dcdh2.rep_ver = dcdh.rep_ver
                                                                               AND    dcdh2.source_num = dcdh.source_num
                                                                               AND    dcdh2.dist_instance = dcdh.dist_instance
                                                                              )
                                                      )
                                    )
                            )
                THEN 'Y'
                ELSE 'N'
           END AS query_name_exist
  </select>
  <select id="getCmnCdList" parameterType="HashMap" resultType="HashMap">
    SELECT ccd.cd_seq AS cd_seq
         , ccd.cd_seq_name AS cd_seq_name
    FROM   cmn_cd_spc ccs
         , cmn_cd_dtl ccd
    WHERE  ccs.cd_num = #{cd_num}
    AND    NOW() BETWEEN ccs.eff_sta_dtm AND ccs.eff_end_dtm
    AND    ccd.cd_num = ccs.cd_num
    AND    NOW() BETWEEN ccd.eff_sta_dtm AND ccd.eff_end_dtm
  </select>
  <select id="getDevDbdLastDistQueryName" parameterType="HashMap" resultType="HashMap">
    SELECT ddq.query_name AS query_name
    FROM   dev_dbd_query ddq
         , dev_cmn_dist_hist dcdh
    WHERE  ddq.query_num = #{query_num}
    AND    dcdh.source_num = ddq.query_num
    AND    dcdh.dist_typ = 1
    AND    dcdh.rep_ver = ddq.rep_ver
    AND    dcdh.dist_instance = #{dist_instance}
    AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                            FROM   dev_cmn_dist_hist dcdh2
                            WHERE  dcdh2.source_num = dcdh.source_num
                            AND    dcdh2.dist_typ = dcdh.dist_typ
                            AND    dcdh2.dist_instance = dcdh.dist_instance
                           )
  </select>
  <select id="getDevDbdDBDistInfo" parameterType="HashMap" resultType="HashMap">
    SELECT ddq.query AS query
         , ddq.query_name AS query_name
         , ddq.rep_ver AS rep_ver
    FROM   dev_dbd_query ddq
    WHERE  ddq.query_num = #{query_num}
    AND    ((#{rep_ver} IS NULL
             AND ddq.rep_ver = (SELECT MAX(ddq2.rep_ver)
                                FROM   dev_dbd_query ddq2
                                WHERE  ddq2.query_num = ddq.query_num
                               )
            )
            OR ddq.rep_ver = #{rep_ver}
           )
  </select>
  <insert id="insertDevCmnDistHist" parameterType="HashMap">
    INSERT INTO dev_cmn_dist_hist
    (dist_typ,
     source_num,
     rep_ver,
     dist_instance,
     audit_id,
     audit_dtm,
     dist_dtm,
     user_num
    ) VALUES
    (#{dist_typ},
     #{source_num},
     #{rep_ver},
     #{dist_instance},
     #{user_num},
     NOW(),
     #{now_dtm},
     #{user_num}
    )
  </insert>
  <select id="getDevSerAllPgmList" parameterType="HashMap" resultType="HashMap">
    SELECT cp.pgm_num AS pgm_num
         , cp.han_nm AS pgm_name
    FROM   cmn_pgm cp
    WHERE  NOW() BETWEEN cp.eff_sta_dtm AND cp.eff_end_dtm
    ORDER BY cp.han_nm
  </select>
  <select id="getDevSerTaskListByPgmNum" parameterType="HashMap" resultType="HashMap">
    SELECT ct.task_num AS task_num
         , ct.task_nm AS task_nm
    FROM   cmn_task ct
    WHERE  ct.pgm_num = #{pgm_num}
    AND    NOW() BETWEEN ct.eff_sta_dtm AND ct.eff_end_dtm
    ORDER BY ct.task_nm
  </select>
  <select id="getDevSerPageListByTaskNum" parameterType="HashMap" resultType="HashMap">
    SELECT cp.page_num AS page_num
         , cp.page_nm AS page_nm
    FROM   cmn_page cp
    WHERE  cp.pgm_num = #{pgm_num}
    AND    cp.task_num = #{task_num}
    AND    NOW() BETWEEN cp.eff_sta_dtm AND cp.eff_end_dtm
    ORDER BY cp.page_nm
  </select>
  <select id="getDevSerServiceListByPageNum" parameterType="HashMap" resultType="HashMap">
    SELECT dss.service_num AS service_num
         , dss.service_name AS service_name
    FROM   dev_ser_service dss
    WHERE  dss.pgm_num = #{pgm_num}
    AND    dss.task_num = #{task_num}
    AND    dss.page_num = #{page_num}
    AND    dss.service_name LIKE CONCAT(CONCAT('%', #{search_text}), '%')
    AND    (dss.rep_ver = (SELECT MAX(dss2.rep_ver)
                           FROM   dev_ser_service dss2
                           WHERE  dss2.service_num = dss.service_num
                           AND    NOT EXISTS (SELECT *
                                              FROM   dev_cmn_dist_hist dcdh
                                              WHERE  dcdh.dist_typ = 2
                                              AND    dcdh.source_num = dss2.service_num
                                             )
                          )
            OR (NOT EXISTS (SELECT *
                            FROM   dev_ser_service dss3
                            WHERE  dss3.service_num = dss.service_num
                            AND    NOT EXISTS (SELECT *
                                               FROM   dev_cmn_dist_hist dcdh2
                                               WHERE  dcdh2.dist_typ = 2
                                               AND    dcdh2.source_num = dss3.service_num
                                              )
                           )
                AND dss.rep_ver = (SELECT dcdh3.rep_ver
                                   FROM   dev_cmn_dist_hist dcdh3
                                   WHERE  dcdh3.source_num = dss.service_num
                                   AND    dcdh3.dist_typ = 2
                                   AND    dcdh3.dist_dtm = (SELECT MAX(dcdh4.dist_dtm)
                                                            FROM   dev_cmn_dist_hist dcdh4
                                                            WHERE  dcdh4.source_num = dcdh3.source_num
                                                            AND    dcdh4.dist_typ = dcdh3.dist_typ
                                                           )
                                  ) 
               )
           )
    ORDER BY dss.service_name
  </select>
  <select id="getDevSerSourceInfoByServiceNum" parameterType="HashMap" resultType="HashMap">
    SELECT dss.source AS source
         , dss.rep_ver AS rep_ver
         , (SELECT MAX(dss4.rep_ver)
            FROM   dev_ser_service dss4
            WHERE  dss4.service_num = dss.service_num
           ) AS max_rep_ver
         , CASE WHEN EXISTS (SELECT *
                             FROM   dev_ser_service dss5
                             WHERE  dss5.service_num = dss.service_num
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh5
                                                WHERE  dcdh5.dist_typ = 2
                                                AND    dcdh5.source_num = dss5.service_num
                                                AND    dcdh5.rep_ver = dss5.rep_ver
                                               )
                            )
                     AND    dss.owner_id &lt;&gt; #{user_num}
                THEN 'N'
                ELSE 'Y'
           END AS is_auth
         , CASE WHEN EXISTS (SELECT *
                             FROM   dev_ser_service dss6
                             WHERE  dss6.service_num = dss.service_num
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh6
                                                WHERE  dcdh6.dist_typ = 2
                                                AND    dcdh6.source_num = dss6.service_num
                                                AND    dcdh6.rep_ver = dss6.rep_ver
                                               )
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_exist_no_dist
    FROM   dev_ser_service dss
    WHERE  dss.service_num = #{service_num}
    AND    (((#{rep_ver} IS NULL
              OR #{rep_ver} = 0
             )
             AND (dss.rep_ver = (SELECT MAX(dss2.rep_ver)
                                 FROM   dev_ser_service dss2
                                 WHERE  dss2.service_num = dss.service_num
                                 AND    NOT EXISTS(SELECT *
                                                   FROM   dev_cmn_dist_hist dcdh
                                                   WHERE  dcdh.dist_typ = 2
                                                   AND    dcdh.source_num = dss2.service_num
                                                   AND    dcdh.rep_ver = dss2.rep_ver
                                                  )
                                )
                   OR (NOT EXISTS (SELECT *
                                   FROM   dev_ser_service dss3
                                   WHERE  dss3.service_num = dss.service_num
                                   AND    NOT EXISTS (SELECT *
                                                      FROM   dev_cmn_dist_hist dcdh2
                                                      WHERE  dcdh2.dist_typ = 2
                                                      AND    dcdh2.source_num = dss3.service_num
                                                      AND    dcdh2.rep_ver = dss3.rep_ver
                                                     )
                                   )
                       AND dss.rep_ver = (SELECT dcdh3.rep_ver
                                          FROM   dev_cmn_dist_hist dcdh3
                                          WHERE  dcdh3.source_num = dss.service_num
                                          AND    dcdh3.dist_dtm = (SELECT MAX(dcdh4.dist_dtm)
                                                                   FROM   dev_cmn_dist_hist dcdh4
                                                                   WHERE  dcdh4.source_num = dcdh3.source_num
                                                                   )
                                         )
                      )
                 )
            ) OR #{rep_ver} = dss.rep_ver
           )
  </select>
  <select id="getDevSerNewServiceSource" parameterType="HashMap" resultType="HashMap">
    SELECT ccd.cd_seq_name AS source
    FROM   cmn_cd_dtl ccd
    WHERE  ccd.cd_num = 17
    AND    NOW() BETWEEN ccd.eff_sta_dtm AND ccd.eff_end_dtm
  </select>
  <select id="getDevSerNewServiceInfo" parameterType="HashMap" resultType="HashMap">
    SELECT cp1.pgm_abb AS pgm_abb
         , ct.task_abb AS task_abb
         , cp2.page_abb AS page_abb
    FROM   cmn_pgm cp1
         , cmn_task ct
         , cmn_page cp2
    WHERE  cp1.pgm_num = #{pgm_num}
    AND    NOW() BETWEEN cp1.eff_sta_dtm AND cp1.eff_end_dtm
    AND    ct.pgm_num = cp1.pgm_num
    AND    ct.task_num = #{task_num}
    AND    NOW() BETWEEN ct.eff_sta_dtm AND ct.eff_end_dtm
    AND    cp2.pgm_num = cp1.pgm_num
    AND    cp2.task_num = ct.task_num
    AND    cp2.page_num = #{page_num}
    AND    NOW() BETWEEN cp2.eff_sta_dtm AND cp2.eff_end_dtm
  </select>
  <insert id="insertDevSerServiceSource" parameterType="HashMap">
    INSERT INTO dev_ser_service
    (
     service_num,
     rep_ver,
     audit_id,
     audit_dtm,
     pgm_num,
     task_num,
     page_num,
     service_name,
     service_exp,
     source,
     eff_sta_dtm,
     owner_id
    )
    SELECT IFNULL(MAX(dss.service_num) + 1, 1) AS service_num
         , 1 AS rep_ver
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , #{pgm_num} AS pgm_num
         , #{task_num} AS task_num
         , #{page_num} AS page_num
         , #{service_name} AS service_name
         , NULL AS service_exp
         , #{source} AS source
         , #{now_dtm} AS eff_sta_dtm
         , #{user_num} AS owner_id
    FROM  dev_ser_service dss
  </insert>
  <select id="getDevSerLastService" parameterType="HashMap" resultType="HashMap">
    SELECT MAX(dss.service_num) AS service_num
    FROM   dev_ser_service dss
  </select>
  <select id="getDevSerServiceChgAuth" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   dev_ser_service dss
                             WHERE  dss.service_num = #{service_num}
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.source_num = dss.service_num
                                                AND    dcdh.rep_ver = dss.rep_ver
                                               )
                             AND    dss.owner_id &lt;&gt; #{user_num}
                            )
                THEN 'N'
                ELSE 'Y'
           END AS is_auth
  </select>
  <select id="getDevSerIsServiceUpdateMode" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   dev_ser_service dss
                             WHERE  dss.service_num = #{service_num}
                             AND    NOT EXISTS (SELECT *
                                                FROM   dev_cmn_dist_hist dcdh
                                                WHERE  dcdh.source_num = dss.service_num
                                                AND    dcdh.dist_typ = 2
                                                AND    dcdh.rep_ver = dss.rep_ver
                                               )
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_update_mode
  </select>
  <insert id="insertDevSerServiceVersionUp" parameterType="HashMap">
    INSERT INTO dev_ser_service
    (
     service_num,
     rep_ver,
     audit_id,
     audit_dtm,
     pgm_num,
     task_num,
     page_num,
     service_name,
     service_exp,
     source,
     eff_sta_dtm,
     owner_id
    )
    SELECT dss.service_num AS service_num
         , (SELECT MAX(dss2.rep_ver)
            FROM   dev_ser_service dss2
            WHERE  dss2.service_num = dss.service_num
           ) + 1 AS rep_ver
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , CASE WHEN #{pgm_num} IS NULL 
                     OR #{pgm_num} = 0
                THEN dss.pgm_num
                ELSE #{pgm_num}
           END AS pgm_num
         , CASE WHEN #{task_num} IS NULL 
                     OR #{task_num} = 0
                THEN dss.task_num
                ELSE #{task_num}
           END AS task_num
         , CASE WHEN #{page_num} IS NULL 
                     OR #{page_num} = 0
                THEN dss.page_num
                ELSE #{page_num}
           END AS page_num
         , CASE WHEN #{service_name} IS NULL 
                     OR #{service_name} = 0
                THEN dss.service_name
                ELSE #{service_name}
           END AS service_name
         , NULL AS service_exp
         , #{source} AS source
         , #{now_dtm} AS eff_sta_dtm
         , #{user_num} AS owner_id
    FROM   dev_ser_service dss
    WHERE  dss.service_num = #{service_num}
    AND    dss.rep_ver = (SELECT dcdh.rep_ver
                          FROM   dev_cmn_dist_hist dcdh
                          WHERE  dcdh.source_num = dss.service_num
                          AND    dcdh.dist_typ = 2
                          AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                                                  FROM   dev_cmn_dist_hist dcdh2
                                                  WHERE  dcdh2.source_num = dcdh.source_num
                                                  AND    dcdh2.dist_typ = dcdh.dist_typ
                                                 )
                         )
  </insert>
  <update id="updateDevSerService" parameterType="HashMap">
    UPDATE dev_ser_service dss
    SET    source = #{source}
         , service_num = CASE WHEN #{service_name} IS NOT NULL
                                   AND #{service_name} &lt;&gt; 0
                              THEN #{service_num}
                              ELSE service_num
                         END
         , pgm_num = CASE WHEN #{pgm_num} IS NOT NULL
                               AND #{pgm_num} &lt;&gt; 0
                          THEN #{pgm_num}
                          ELSE pgm_num
                     END
         , task_num = CASE WHEN #{task_num} IS NOT NULL
                                AND #{task_num} &lt;&gt; 0
                           THEN #{task_num}
                           ELSE task_num
                      END
         , page_num = CASE WHEN #{page_num} IS NOT NULL
                                AND #{page_num} &lt;&gt; 0
                           THEN #{page_num}
                           ELSE page_num
                      END
         , audit_id = #{user_num}
         , audit_dtm = NOW()
    WHERE  service_num = #{service_num}
    AND    NOT EXISTS (SELECT *
                       FROM   dev_cmn_dist_hist dcdh
                       WHERE  dcdh.source_num = dss.service_num
                       AND    dcdh.rep_ver = dss.rep_ver
                       AND    dcdh.dist_typ = 2
                      )
  </update>
  <select id="getDevSerLastDistServiceName" parameterType="HashMap" resultType="HashMap">
    SELECT cp1.pgm_abb AS pgm_abb
         , ct.task_abb AS task_abb
         , cp2.page_abb AS page_abb
         , dss.service_name AS service_name
    FROM   dev_ser_service dss
         , cmn_pgm cp1
         , cmn_task ct
         , cmn_page cp2
         , dev_cmn_dist_hist dcdh
    WHERE  dss.service_num = #{service_num}
    AND    dcdh.dist_dtm BETWEEN cp1.eff_sta_dtm AND cp1.eff_end_dtm
    AND    dcdh.dist_dtm BETWEEN ct.eff_sta_dtm AND ct.eff_end_dtm
    AND    dcdh.dist_dtm BETWEEN cp2.eff_sta_dtm AND cp2.eff_end_dtm
    AND    dss.pgm_num = cp1.pgm_num
    AND    dss.task_num = ct.task_num
    AND    dss.page_num = cp2.page_num
    AND    ct.pgm_num = cp1.pgm_num
    AND    cp2.pgm_num = ct.pgm_num
    AND    cp2.task_num = ct.task_num
    AND    dss.pgm_num = cp1.pgm_num
    AND    dss.task_num = ct.task_num
    AND    dss.page_num = cp2.page_num
    AND    dcdh.source_num = dss.service_num
    AND    dcdh.rep_ver = dss.rep_ver
    AND    dcdh.dist_typ = 2
    AND    dcdh.dist_instance = #{dist_instance}
    AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                            FROM   dev_cmn_dist_hist dcdh2
                            WHERE  dcdh2.source_num = dcdh.source_num
                            AND    dcdh2.dist_typ = dcdh.dist_typ
                            AND    dcdh2.dist_instance = dcdh.dist_instance
                           )
  </select>
  <select id="getDevSerDBDistInfo" parameterType="HashMap" resultType="HashMap">
    SELECT cp1.pgm_abb AS pgm_abb
         , ct.task_abb AS task_abb
         , cp2.page_abb AS page_abb
         , dss.service_name AS service_name
         , dss.source AS source
         , dss.rep_ver AS rep_ver
    FROM   dev_ser_service dss
         , cmn_pgm cp1
         , cmn_task ct
         , cmn_page cp2
    WHERE  dss.service_num = #{service_num}
    AND    dss.pgm_num = cp1.pgm_num
    AND    NOW() BETWEEN cp1.eff_sta_dtm AND cp1.eff_end_dtm
    AND    dss.task_num = ct.task_num
    AND    dss.page_num = cp2.page_num
    AND    ct.pgm_num = cp1.pgm_num
    AND    NOW() BETWEEN ct.eff_sta_dtm AND ct.eff_end_dtm
    AND    cp2.pgm_num = ct.pgm_num
    AND    cp2.task_num = ct.task_num
    AND    NOW() BETWEEN cp2.eff_sta_dtm AND cp2.eff_end_dtm
    AND    dss.pgm_num = cp1.pgm_num
    AND    dss.task_num = ct.task_num
    AND    dss.page_num = cp2.page_num
    AND    ((((#{rep_ver} IS NULL)
               OR (#{rep_ver} = 0)
               )
               AND NOT EXISTS (SELECT *
                               FROM   dev_cmn_dist_hist dcdh
                               WHERE  dcdh.dist_typ = 2
                               AND    dcdh.source_num = dss.service_num
                               AND    dcdh.rep_ver = dss.rep_ver
                              )
            )
            OR dss.rep_ver = #{rep_ver}
           )
  </select>
  <delete id="deleteLastRepVerOfQuery" parameterType="HashMap">
    DELETE
    FROM   dev_dbd_query ddq
    WHERE  ddq.query_num = #{query_num}
    AND    NOT EXISTS (SELECT *
                       FROM   dev_cmn_dist_hist dcdh
                       WHERE  dcdh.dist_typ = 1
                       AND    dcdh.source_num = ddq.query_num
                       AND    dcdh.rep_ver = ddq.rep_ver
                      )
  </delete>
  <select id="getDevDbdSelectTest" parameterType="HashMap" resultType="java.util.LinkedHashMap">
    ${query}
  </select>
  <insert id="insertDevDbdInsertTest" parameterType="HashMap">
    ${query}
  </insert>
  <update id="updateDevDbdUpdateTest" parameterType="HashMap">
    ${query}
  </update>
  <delete id="deleteDevDbdDeleteTest" parameterType="HashMap">
    ${query}
  </delete>
  <select id="getDevSerCheckServiceNameExist" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS(SELECT *
                            FROM   dev_ser_service dss
                            WHERE  dss.service_name = #{service_name}
                            AND    dss.pgm_num = #{pgm_num}
                            AND    dss.task_num = #{task_num}
                            AND    dss.page_num = #{page_num}
                            AND    (dss.rep_ver = (SELECT MAX(dss2.rep_ver)
                                                   FROM   dev_ser_service dss2
                                                   WHERE  dss2.service_num = dss.service_num
                                                   AND    NOT EXISTS (SELECT *
                                                                      FROM   dev_cmn_dist_hist dcdh3
                                                                      WHERE  dcdh3.dist_typ = 2
                                                                      AND    dcdh3.source_num = dss2.service_num
                                                                      AND    dcdh3.rep_ver = dss2.rep_ver
                                                                     )
                                                  )
                                    OR dss.rep_ver IN (SELECT dss3.rep_ver
                                                       FROM   dev_ser_service dss3
                                                            , dev_cmn_dist_hist dcdh
                                                       WHERE  dss3.service_num = dss.service_num
                                                       AND    dss3.service_num = dcdh.source_num
                                                       AND    dcdh.dist_typ = 2
                                                       AND    dcdh.rep_ver = dss3.rep_ver
                                                       AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                                                                               FROM   dev_cmn_dist_hist dcdh2
                                                                               WHERE  dcdh2.dist_typ = dcdh.dist_typ
                                                                               AND    dcdh2.rep_ver = dcdh.rep_ver
                                                                               AND    dcdh2.source_num = dcdh.source_num
                                                                               AND    dcdh2.dist_instance = dcdh.dist_instance
                                                                              )
                                                      )
                                    )
                            )
                THEN 'Y'
                ELSE 'N'
           END AS service_name_exist
  </select>
  <select id="getDevSerIsExistServiceTestKey" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   dev_ser_test_hst dsth
                             WHERE  dsth.test_key = #{test_key}
                            )
                THEN 'Y'
                ELSE 'N'
            END AS is_exist_test_key
  </select>
  <select id="getDevSerAllDevSourceWithoutTest" parameterType="HashMap" resultType="HashMap">
    SELECT dss.source AS source
         , dss.service_name AS service_name
    FROM   dev_ser_service dss
         , dev_cmn_dist_hist dcdh
    WHERE  dss.service_num = dcdh.source_num
    AND    dcdh.dist_typ = 2
    AND    dcdh.dist_instance = 1
    AND    dcdh.rep_ver = dss.rep_ver
    AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                            FROM   dev_cmn_dist_hist dcdh2
                            WHERE  dcdh2.dist_typ = dcdh.dist_typ
                            AND    dcdh2.dist_instance = dcdh.dist_instance
                            AND    dcdh2.source_num = dcdh.source_num
                           )
    AND    dss.service_num &lt;&gt; #{service_num}
  </select>
  <select id="getDevSerServiceSource" parameterType="HashMap" resultType="HashMap">
    SELECT dss.source AS source
         , dss.service_name AS service_name
    FROM   dev_ser_service dss
    WHERE  dss.service_num = #{service_num}
    AND    ((#{rep_ver} IS NULL
             AND NOT EXISTS (SELECT *
                             FROM   dev_cmn_dist_hist dcdh
                             WHERE  dcdh.source_num = dss.service_num
                             AND    dcdh.dist_typ = 2
                             AND    dcdh.rep_ver = dss.rep_ver
                            )
            ) OR dss.rep_ver = #{rep_ver}
           )
  </select>
  <select id="getDevSerServiceTestConf" parameterType="HashMap" resultType="HashMap">
    SELECT ccd1.cd_seq_name AS file_nm
         , ccd2.cd_seq_name AS file_content
    FROM   cmn_cd_dtl ccd1
         , cmn_cd_dtl ccd2
    WHERE  ccd1.cd_num = 19
    AND    ccd2.cd_num = 20
    AND    ccd1.cd_seq = ccd2.cd_seq
    AND    NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
    AND    NOW() BETWEEN ccd2.eff_sta_dtm AND ccd2.eff_end_dtm
  </select>
  <insert id="insertDevSerTestHst" parameterType="HashMap">
    INSERT INTO dev_ser_test_hst
    (
     user_num,
     test_dtm,
     audit_id,
     audit_dtm,
     service_num,
     test_key,
     test_success_yn,
     rep_ver,
     test_process_cd,
     test_err_cd
    )
    SELECT #{user_num} AS user_num
         , #{now_dtm} AS test_dtm
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , #{service_num} AS service_num
         , #{test_key} AS test_key
         , NULL AS test_success_yn
         , dss.rep_ver AS rep_ver
         , 1 AS test_process_cd
         , NULL AS test_err_cd
    FROM   dev_ser_service dss
    WHERE  dss.service_num = #{service_num}
    AND    ((#{rep_ver} IS NOT NULL
             AND #{rep_ver} &lt;&gt; 0
             AND #{rep_ver} = dss.rep_ver
            ) OR (
                  NOT EXISTS (SELECT *
                              FROM   dev_cmn_dist_hist dcdh
                              WHERE  dcdh.dist_typ = 2
                              AND    dcdh.source_num = dss.service_num
                              AND    dcdh.rep_ver = dss.rep_ver
                             )
                 )
            )
  </insert>
  <insert id="insertDevSerTestLog" parameterType="HashMap">
    INSERT INTO dev_ser_test_log
    (user_num,
     test_dtm,
     log_typ,
     log_seq,
     log_dtm,
     log_msg
    )
    SELECT dsth.user_num AS user_num
         , dsth.test_dtm AS test_dtm
         , #{log_typ} AS log_typ
         , (SELECT IFNULL(MAX(dstl.log_seq) + 1, 1)
            FROM   dev_ser_test_log dstl
            WHERE  dstl.user_num = dsth.user_num
            AND    dstl.test_dtm = dsth.test_dtm
           )
         , NOW() AS log_dtm
         , #{log_msg} AS log_msg
    FROM   dev_ser_test_hst dsth
    WHERE  dsth.test_key = #{test_key}
  </insert>
  <select id="getDevSerTestServiceNumAndRepVer" parameterType="HashMap" resultType="HashMap">
    SELECT dsth.service_num AS service_num
         , dsth.rep_ver AS rep_ver
    FROM   dev_ser_test_hst dsth
    WHERE  dsth.test_key = #{test_key}
  </select>
  <select id="getDevSerTestStatus" parameterType="HashMap" resultType="HashMap">
    SELECT dsth.test_success_yn AS test_success_yn
         , dsth.test_process_cd AS test_process_cd
         , dsth.test_err_cd AS test_err_cd
    FROM   dev_ser_test_hst dsth
    WHERE  dsth.test_key = #{test_key}
  </select>
  <select id="getDevSerTestLog" parameterType="HashMap" resultType="HashMap">
    SELECT dstl.log_msg AS log_msg
         , dstl.log_typ AS log_typ
    FROM   dev_ser_test_hst dsth
         , dev_ser_test_log dstl
    WHERE  dsth.test_key = #{test_key}
    AND    dsth.user_num = dstl.user_num
    AND    dsth.test_dtm = dstl.test_dtm
    AND    (#{min_log_seq} = 0
            OR #{min_log_seq} IS NULL
            OR log_seq > #{min_log_seq}
           )
    ORDER BY log_seq
  </select>
  <update id="updateDevSerTestLogHst" parameterType="HashMap">
    UPDATE dev_ser_test_hst
    SET    test_process_cd = #{test_process_cd}
         , test_success_yn = #{test_success_yn}
         , test_err_cd = #{test_err_cd}
         , audit_id = #{user_num}
         , audit_dtm = NOW()
    WHERE  test_key = #{test_key}
  </update>
  <select id="getDevSerTestState" parameterType="HashMap" resultType="HashMap">
    SELECT dsth.test_success_yn AS test_success_yn
         , (SELECT ccd1.cd_seq_name
            FROM   cmn_cd_dtl ccd1
            WHERE  ccd1.cd_num = 21
            AND    ccd1.cd_seq = dsth.test_process_cd
            AND    NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
           ) AS test_process_nm
         , (SELECT ccd1.cd_seq_name
            FROM   cmn_cd_dtl ccd1
            WHERE  ccd1.cd_num = 22
            AND    ccd1.cd_seq = dsth.test_err_cd
            AND    NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
           ) AS test_err_nm
    FROM   dev_ser_test_hst dsth
    WHERE  dsth.test_key = #{test_key}
  </select>
  <select id="getDevSerServiceRepInfo" parameterType="HashMap" resultType="HashMap">  
    SELECT dss.rep_ver
         , dcdh.dist_instance
         , (SELECT ccd.cd_seq_name
            FROM   cmn_cd_dtl ccd
            WHERE  ccd.cd_num = 15
            AND    ccd.cd_seq = dcdh.dist_instance
            AND    NOW() BETWEEN ccd.eff_sta_dtm AND ccd.eff_end_dtm
           ) AS dist_instance_nm
    FROM   dev_ser_service dss
         , dev_cmn_dist_hist dcdh
    WHERE  dss.service_num = #{service_num}
    AND    dss.service_num = dcdh.source_num
    AND    dcdh.rep_ver = dss.rep_ver
    AND    dcdh.dist_typ = 2
    AND    dcdh.dist_dtm = (SELECT MAX(dcdh2.dist_dtm)
                            FROM   dev_cmn_dist_hist dcdh2
                            WHERE  dcdh2.source_num = dcdh.source_num
                            AND    dcdh2.dist_instance = dcdh.dist_instance
                            AND    dcdh2.dist_typ = 2
                           )
  </select>
  <select id="getResStoNeuralNetworkInfo" parameterType="HashMap" resultType="HashMap">
    SELECT rann.input_size AS input_size
         , rann.output_size AS output_size
         , rann.layer_size AS layer_size
    FROM   res_api_neural_net rann
    WHERE  rann.nn_num = #{nn_num}
    AND    NOW() BETWEEN rann.eff_sta_dtm AND rann.eff_end_dtm
  </select>
  <select id="getResStoNeuralNetworkNeuranSize" parameterType="HashMap" resultType="HashMap">
    SELECT rannls.neuran_size AS neuran_size
    FROM   res_api_neural_net_layer_size rannls
    WHERE  rannls.nn_num = #{nn_num}
    AND    rannls.layer_num = #{layer_num}
    AND    NOW() BETWEEN rannls.eff_sta_dtm AND rannls.eff_end_dtm
  </select>
  <select id="getResStoNeuralNetworkWeight" parameterType="HashMap" resultType="HashMap">
    SELECT rannw.weight AS weight
         , rannw.input_num AS input_num
         , rannw.output_num AS output_num
    FROM   res_api_neural_net_weight rannw
    WHERE  rannw.nn_num = #{nn_num}
    AND    NOW() BETWEEN rannw.eff_sta_dtm AND rannw.eff_end_dtm
    AND    rannw.layer_num = #{layer_num}
    ORDER BY rannw.layer_num, rannw.input_num, rannw.output_num
  </select>
  <select id="getResStoNeuralNetworkBias" parameterType="HashMap" resultType="HashMap">
    SELECT rannb.bias AS bias
         , rannb.output_num AS output_num
    FROM   res_api_neural_net_bias rannb
    WHERE  rannb.nn_num = #{nn_num}
    AND    NOW() BETWEEN rannb.eff_sta_dtm AND rannb.eff_end_dtm
    AND    rannb.layer_num = #{layer_num}
    ORDER BY rannb.layer_num
  </select>
  <update id="updateResStoNeuralNetworkWeight" parameterType="HashMap">
    UPDATE res_api_neural_net_weight rannw
    SET    rannw.weight = #{weight}
         , rannw.audit_id = #{user_num}
         , rannw.audit_dtm = #{now_dtm}
    WHERE  rannw.nn_num = #{nn_num}
    AND    rannw.layer_num = #{layer_num}
    AND    rannw.input_num = #{input_num}
    AND    rannw.output_num = #{output_num}
    AND    NOW() BETWEEN rannw.eff_sta_dtm AND rannw.eff_end_dtm
  </update>
  <update id="updateResStoNeuralNetworkBias" parameterType="HashMap">
    UPDATE res_api_neural_net_bais rannb
    SET    rannb.bias = #{bias}
         , rannb.audit_id = #{user_num}
         , rannb.audit_dtm = #{now_dtm}
    WHERE  rannb.nn_num = #{nn_num}
    AND    rannb.layer_num = #{layer_num}
    AND    rannb.output_num = #{output_num}
    AND    NOW() BETWEEN rannb.eff_sta_dtm AND rannb.eff_end_dtm
  </update>
  <insert id="insertResStoNeuralNetworkWeight" parameterType="HashMap">
    INSERT INTO res_api_neural_net_weight
    (nn_num,
     layer_num,
     input_num,
     output_num,
     eff_end_dtm,
     audit_id,
     audit_dtm,
     weight,
     eff_sta_dtm
    ) VALUES (
     #{nn_num},
     #{layer_num},
     #{input_num},
     #{output_num},
     '9999-12-31 23:59:59',
     #{user_num},
     NOW(),
     #{weight},
     #{now_dtm}
    )
  </insert>
  <insert id="insertResStoNeuralNetworkBias" parameterType="HashMap">
    INSERT INTO res_api_neural_net_bias
    (nn_num,
     layer_num,
     output_num,
     eff_end_dtm,
     audit_id,
     audit_dtm,
     bias,
     eff_sta_dtm
    ) VALUES (
     #{nn_num},
     #{layer_num},
     #{output_num},
     '9999-12-31 23:59:59',
     #{user_num},
     NOW(),
     #{bias},
     #{now_dtm}
    )
  </insert>
  <update id="updateResStoNeuralNetworkWeightForDelete" parameterType="HashMap">
    UPDATE res_api_neural_net_weight rannw
    SET    rannw.eff_end_dtm = #{now_dtm} - INTERVAL 1 SECOND
         , rannw.audit_id = #{user_num}
         , rannw.audit_dtm = NOW()
    WHERE  rannw.nn_num = #{nn_num}
    AND    rannw.layer_num = #{layer_num}
    AND    rannw.input_num = #{input_num}
    AND    rannw.output_num = #{output_num}
    AND    NOW() BETWEEN rannw.eff_sta_dtm AND rannw.eff_end_dtm
  </update>
  <update id="updateResStoNeuralNetworkBiasForDelete" parameterType="HashMap">
    UPDATE res_api_neural_net_bias rannb
    SET    rannb.eff_end_dtm = #{now_dtm} - INTERVAL 1 SECOND
         , rannb.audit_id = #{user_num}
         , rannb.audit_dtm = NOW()
    WHERE  rannb.nn_num = #{nn_num}
    AND    rannb.layer_num = #{layer_num}
    AND    rannb.output_num = #{output_num}
    AND    NOW() BETWEEN rannb.eff_sta_dtm AND rannb.eff_end_dtm
  </update>
  <insert id="insertResStoNeuralNetwork" parameterType="HashMap">
    INSERT INTO res_api_neural_net
    (nn_num,
     eff_end_dtm,
     audit_id,
     audit_dtm,
     input_size,
     output_size,
     layer_size,
     eff_sta_dtm
    )
    SELECT IFNULL(MAX(rann.nn_num) + 1, 1) AS nn_num
         , '9999-12-31 23:59:59' AS eff_end_dtm
         , #{user_num} AS audit_id
         , NOW() AS audit_dtm
         , #{input_size} AS input_size
         , #{output_size} AS output_size
         , #{layer_size} AS layer_size
         , #{now_dtm} AS eff_sta_dtm
    FROM   res_api_neural_net rann
  </insert>
  <insert id="insertResStoNeuralNetLayerSize" parameterType="HashMap">
    INSERT INTO res_api_neural_net_layer_size
    (nn_num,
     layer_num,
     eff_end_dtm,
     audit_id,
     audit_dtm,
     neuran_size,
     eff_sta_dtm
    )
    VALUES
    (#{nn_num},
     #{layer_num},
     '9999-12-31 23:59:59',
     #{user_num},
     NOW(),
     #{neuran_size},
     #{now_dtm}
    )
  </insert>
  <select id="getResStoMaxNeuralNetNum" parameterType="HashMap" resultType="HashMap">
    SELECT MAX(rann.nn_num) AS nn_num
    FROM   res_api_neural_net rann
  </select>
  <update id="updateTestNNWeight" parameterType="HashMap">
    UPDATE res_api_neural_net_weight
    SET    weight = #{weight}
    WHERE  nn_num = #{nn_num}
    AND    layer_num = #{layer_num}
    AND    input_num = #{input_num}
    AND    output_num = #{output_num}
    AND    NOW() BETWEEN eff_sta_dtm AND eff_end_dtm
  </update>
  <update id="updateTestNNBias" parameterType="HashMap">
    UPDATE res_api_neural_net_bias
    SET    bias = #{bias}
    WHERE  nn_num = #{nn_num}
    AND    layer_num = #{layer_num}
    AND    output_num = #{output_num}
    AND    NOW() BETWEEN eff_sta_dtm AND eff_end_dtm
  </update>
  <insert id="insertTestTemp" parameterType = "HashMap">
    INSERT INTO cmn_tmp
    (oper_id,
     seq,
     audit_id,
     audit_dtm,
     itm_ctt1,
     itm_ctt2,
     itm_ctt3
    )
    VALUES
    (#{oper_id},
     #{seq},
     #{user_num},
     NOW(),
     #{output_seq},
     #{output_num},
     #{output}
    )
  </insert>
  <select id="getTestTemp" parameterType="HashMap" resultType="HashMap">
    SELECT ct.itm_ctt2 AS output_num
         , ct.itm_ctt3 AS output
    FROM   cmn_tmp ct
    WHERE  ct.oper_id = #{oper_id}
    AND    ct.itm_ctt1 = #{output_seq}
  </select>
  <select id="getTestDataSize" parameterType="HashMap" resultType="HashMap">
    SELECT (SELECT MAX(CAST(ct.itm_ctt1 AS SIGNED))
            FROM   cmn_tmp ct
            WHERE  ct.oper_id = #{oper_id}
           ) AS input_data_size
         , (SELECT MAX(CAST(ct.itm_ctt2 AS SIGNED))
            FROM   cmn_tmp ct
            WHERE  ct.oper_id = #{oper_id}
           ) AS input_size
  </select>
  <update id="updateCmnBatchErrorResult" parameterType="HashMap">
    UPDATE cmn_batch_exe_hst cbeh
    SET    cbeh.real_end_dtm = NOW()
         , cbeh.batch_exe_state = 3
         , cbeh.batch_exe_err_num = #{err_num}
         , cbeh.audit_dtm = NOW()
         , cbeh.batch_result_report = #{batch_result_report}
    WHERE  cbeh.batch_num = #{batch_num}
    AND    cbeh.exe_dtm = #{exe_dtm}
    AND    cbeh.batch_exe_state = 1
  </update>
  <select id="getCmnNextCatalinaDir" parameterType="HashMap" resultType="HashMap">
    SELECT ccd3.cd_seq_name AS dir
         , CAST(ccd1.cd_seq_name AS DECIMAL) AS ap_num
         , CAST(ccd2.cd_seq_name AS DECIMAL) AS container_num
    FROM   cmn_cd_dtl ccd1
         , cmn_cd_dtl ccd2
         , cmn_cd_dtl ccd3
    WHERE  NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
    AND    ccd1.cd_num = 23
    AND    ccd1.cd_seq_name = CONCAT(#{ap_num})
    AND    NOW() BETWEEN ccd2.eff_sta_dtm AND ccd2.eff_end_dtm
    AND    ccd2.cd_num = 24
    AND    ccd2.cd_seq_name = CONCAT(#{container_num} + 1)
    AND    ccd2.cd_seq = ccd1.cd_seq
    AND    NOW() BETWEEN ccd3.eff_sta_dtm AND ccd3.eff_end_dtm
    AND    ccd3.cd_num = 25
    AND    ccd3.cd_seq = ccd2.cd_seq
    UNION ALL
    SELECT ccd3.cd_seq_name AS dir
         , CAST(ccd1.cd_seq_name AS DECIMAL) AS ap_num
         , 1 AS container_num
    FROM   cmn_cd_dtl ccd1
         , cmn_cd_dtl ccd2
         , cmn_cd_dtl ccd3
    WHERE  NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
    AND    ccd1.cd_num = 23
    AND    ccd1.cd_seq_name = CONCAT(#{ap_num})
    AND    NOW() BETWEEN ccd2.eff_sta_dtm AND ccd2.eff_end_dtm
    AND    ccd2.cd_num = 24
    AND    #{container_num} = (SELECT MAX(CAST(ccd4.cd_seq_name AS DECIMAL))
                               FROM   cmn_cd_dtl ccd4
                                    , cmn_cd_dtl ccd5
                               WHERE  NOW() BETWEEN ccd5.eff_sta_dtm AND ccd5.eff_end_dtm
                               AND    ccd5.cd_num = 23
                               AND    ccd5.cd_seq_name = ccd1.cd_seq_name
                               AND    NOW() BETWEEN ccd4.eff_sta_dtm AND ccd4.eff_end_dtm
                               AND    ccd4.cd_num = 24
                               AND    ccd4.cd_seq = ccd5.cd_seq
                              )
    AND    ccd2.cd_seq = ccd1.cd_seq
    AND    ccd2.cd_seq_name = '1'
    AND    NOW() BETWEEN ccd3.eff_sta_dtm AND ccd3.eff_end_dtm
    AND    ccd3.cd_num = 25
    AND    ccd3.cd_seq = ccd2.cd_seq
  </select>
  <insert id="insertCmnAutoRecoveryHst" parameterType="HashMap">
    INSERT INTO cmn_auto_recovery_hst
    (datetime,
     ap_num,
     container_num,
     audit_id,
     audit_dtm
    ) VALUES (
     #{datetime},
     #{ap_num},
     #{container_num},
     #{user_num},
     NOW()
    )
  </insert>
  <insert id="insertCmnBatchProcessHst" parameterType="HashMap">
    INSERT INTO cmn_batch_proc_attm_hst
    (datetime,
     ap_num,
     container_num,
     audit_id,
     audit_dtm
    ) VALUES (
     #{datetime},
     #{ap_num},
     #{container_num},
     #{user_num},
     NOW()
    )
  </insert>
  <select id="getCmnAllAPAndContainerList" parameterType="HashMap" resultType="HashMap">
    SELECT CAST(ccd1.cd_seq_name AS INTEGER) AS ap_num
         , CAST(ccd2.cd_seq_name AS INTEGER) AS container_num
    FROM   cmn_cd_dtl ccd1
         , cmn_cd_dtl ccd2
    WHERE  ccd1.cd_num = 23
    AND    NOW() BETWEEN ccd1.eff_sta_dtm AND ccd1.eff_end_dtm
    AND    ccd2.cd_num = 24
    AND    ccd1.cd_seq = ccd2.cd_seq
    AND    NOW() BETWEEN ccd2.eff_sta_dtm AND ccd2.eff_end_dtm
    ORDER BY ccd1.cd_seq_name, ccd2.cd_seq_name
  </select>
 <select id="getNavPssTimeBasePosByTimeAndUser" parameterType="HashMap" resultType="HashMap">SELECT nptbp.title AS title
     , nptbp.lat AS lat
     , nptbp.lng AS lng
FROM   nav_pss_time_base_pos nptbp
     , nav_pss_key_id_mapp npki
WHERE  npki.search_key = #{key}
AND    npki.user_num = nptbp.user_num
AND    CURTIME() BETWEEN nptbp.sta_tm AND nptbp.end_tm</select>
  <select id="getNavPssBasePosByTimeAndUser" parameterType="HashMap" resultType="HashMap">SELECT npbp.title AS title
     , npbp.lat AS lat
     , npbp.lng AS lng
FROM   nav_pss_base_pos npbp
     , nav_pss_key_id_mapp npki
WHERE  npki.search_key = #{key}
AND    npki.user_num = npbp.user_num</select>
</mapper>