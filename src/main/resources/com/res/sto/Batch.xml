<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.res.sto.batch">
  <select id="getResStoIsGetStockInfoBatchExistsOnDate" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   cmn_batch_exe_hst cbeh
                             WHERE  cbeh.batch_num = 1
                             AND    cbeh.exe_dtm LIKE CONCAT(#{date}, '%')
                             AND    cbeh.batch_exe_state IN (1, 2)
                             AND    cbeh.exe_dtm &lt; #{datetime}
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_exist
  </select>
  <select id="getResStoCorpInfo" parameterType="HashMap" resultType="HashMap">
    SELECT rssci.stock_nm AS stock_nm
         , rssci.stock_type AS stock_type
         , rssci.stock_info1 AS stock_info1
         , rssci.stock_info2 AS stock_info2
         , rssci.stock_info3 AS stock_info3
         , rssci.stock_info4 AS stock_info4
         , rssci.stock_info5 AS stock_info5
         , rssci.stock_info6 AS stock_info6
         , rssci.stock_info7 AS stock_info7
         , rssci.stock_info8 AS stock_info8
         , rssci.stock_info9 AS stock_info9
         , rssci.stock_info10 AS stock_info10
    FROM   res_sto_stock_corp_info rssci
    WHERE  rssci.stock_num = #{stock_num}
    AND    #{date} BETWEEN rssci.eff_sta_dt AND rssci.eff_end_dt
  </select>
  <update id="updateResStoCorpInfoDelete" parameterType="HashMap">
    UPDATE res_sto_stock_corp_info rssci
    SET    rssci.eff_end_dt = #{date} - INTERVAL 1 DAY
         , rssci.audit_id = #{user_num}
         , rssci.audit_dtm = NOW()
    WHERE  rssci.stock_num = #{stock_num}
    AND    #{date} BETWEEN rssci.eff_sta_dt AND rssci.eff_end_dt
  </update>
  <select id="getResStoAllCorpList" parameterType="HashMap" resultType="HashMap">
    SELECT rssci.stock_num AS stock_num
    FROM   res_sto_stock_corp_info rssci
    WHERE  #{date} BETWEEN rssci.eff_sta_dt AND rssci.eff_end_dt
    ORDER BY stock_num
  </select>
  <select id="getResStoIsExistStockInfo" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   res_sto_stock_corp_price_hst
                             WHERE  stock_num = #{stock_num}
                             AND    date = #{date}
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_exist
  </select>
  <insert id="insertResStoPriceHst" parameterType="HashMap">
    INSERT INTO res_sto_stock_corp_price_hst
    (stock_num,
     date,
     audit_id,
     audit_dtm,
     open_price,
     high_price,
     low_price,
     close_price,
     volume
    ) VALUES (
     #{stock_num},
     #{date},
     #{user_num},
     NOW(),
     #{open_price},
     #{high_price},
     #{low_price},
     #{close_price},
     #{volume}
    )
  </insert>
  <select id="getResStoPriceHstExist" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   res_sto_stock_corp_price_hst
                             WHERE  stock_num = #{stock_num}
                             AND    date = #{date}
                            )
                THEN 'Y'
                ELSE 'N'
           END AS is_exist
  </select>
  <insert id="insertResStoPriceTimeHst" parameterType="HashMap">
    INSERT INTO res_sto_stock_corp_price_time_hst
    (stock_num,
     datetime,
     audit_id,
     audit_dtm,
     price,
     diff_vol,
     sale_price,
     purchase_price
    ) VALUES (
     #{stock_num},
     #{purchase_time},
     #{user_num},
     NOW(),
     #{price},
     #{diff_vol},
     #{sale_price},
     #{purchase_price}
    )
  </insert>
  <select id="getResStoIsExistPriceTimeHst" parameterType="HashMap" resultType="HashMap">
    SELECT CASE WHEN EXISTS (SELECT *
                             FROM   res_sto_stock_corp_price_time_hst rsscpth
                             WHERE  rsscpth.datetime = #{purchase_time}
                             AND    rsscpth.stock_num = #{stock_num})
                THEN 'Y'
                ELSE 'N'
           END AS is_exist
  </select>
  <insert id="insertResStoNewStockCorpInfo" parameterType="HashMap">
    INSERT INTO res_sto_stock_corp_info
    (stock_num,
     eff_end_dt,
     audit_id,
     audit_dtm,
     stock_nm,
     stock_type,
     stock_info1,
     stock_info2,
     stock_info3,
     stock_info4,
     stock_info5,
     stock_info6,
     stock_info7,
     stock_info8,
     stock_info9,
     stock_info10,
     eff_sta_dt
    )
    VALUES (
     #{stock_num},
     '9999-12-31',
     #{user_num},
     NOW(),
     #{stock_nm},
     #{stock_type},
     #{stock_info1},
     #{stock_info2},
     #{stock_info3},
     #{stock_info4},
     #{stock_info5},
     #{stock_info6},
     #{stock_info7},
     #{stock_info8},
     #{stock_info9},
     #{stock_info10},
     #{eff_sta_dt}
    )
  </insert>
  <select id="getResStoNewStockCorpInfo" parameterType="HashMap" resultType="HashMap">
    SELECT rssci.stock_nm AS stock_nm
         , rssci.stock_type AS stock_type
         , rssci.stock_info1 AS stock_info1
         , rssci.stock_info2 AS stock_info2
         , rssci.stock_info3 AS stock_info3
         , rssci.stock_info4 AS stock_info4
         , rssci.stock_info5 AS stock_info5
         , rssci.stock_info6 AS stock_info6
         , rssci.stock_info7 AS stock_info7
         , rssci.stock_info8 AS stock_info8
         , rssci.stock_info9 AS stock_info9
         , rssci.stock_info10 AS stock_info10
    FROM   res_sto_stock_corp_info rssci
    WHERE  rssci.stock_num = #{stock_num}
    AND    #{dt} BETWEEN rssci.eff_sta_dt AND rssci.eff_end_dt
  </select>
</mapper>